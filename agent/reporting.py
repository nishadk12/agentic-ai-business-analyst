from __future__ import annotations
import os, base64
from datetime import datetime
from typing import Dict, Any
from jinja2 import Template

TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>AI Business Analyst Report</title>
  <style>
    body { font-family: -apple-system, Segoe UI, Roboto, sans-serif; margin: 40px; color:#0f172a;}
    h1,h2,h3{ color:#1f2937;}
    .metric { padding: 6px 10px; background:#f1f5f9; border-radius:8px; display:inline-block; margin-right:8px;}
    .card { background:#fff; border:1px solid #e5e7eb; border-radius:12px; padding:18px; margin:16px 0;}
    .small{ color:#64748b; font-size:12px;}
    table { border-collapse: collapse; width: 100%; }
    th, td { border: 1px solid #e5e7eb; padding: 8px; text-align: left; }
    th { background: #f8fafc;}
    .footer { margin-top: 32px; color:#64748b; font-size:12px;}
  </style>
</head>
<body>
  <h1>AI Business Analyst â€“ Executive Summary</h1>
  <div class="small">Generated: {{ now }}</div>

  <div class="card">
    <h2>Dataset Overview</h2>
    <p><b>Rows:</b> {{ overview.rows }} &nbsp; <b>Columns:</b> {{ overview.cols }}</p>
    <h3>Column Types</h3>
    <table>
      <tr><th>Column</th><th>Dtype</th></tr>
      {% for k, v in overview.dtypes.items() %}
      <tr><td>{{k}}</td><td>{{v}}</td></tr>
      {% endfor %}
    </table>
    {% if overview.missing %}
    <h3>Missing Values</h3>
    <table>
      <tr><th>Column</th><th>Missing Count</th><th>Missing %</th></tr>
      {% for k, v in overview.missing.items() %}
      <tr><td>{{k}}</td><td>{{v.missing_count}}</td><td>{{'{:.2%}'.format(v.missing_pct)}}</td></tr>
      {% endfor %}
    </table>
    {% endif %}
  </div>

  <div class="card">
    <h2>Modeling Summary</h2>
    <p><b>Problem Type:</b> {{ problem_type }}</p>
    <p><b>Best Model:</b> {{ best_model_name }}</p>
    <div>
      {% for mk, mv in best_metrics.items() %}
      <span class="metric">{{ mk }}: {{ '{:.4f}'.format(mv) }}</span>
      {% endfor %}
    </div>
    <h3>Leaderboard</h3>
    <table>
      <tr>
        <th>Model</th>
        {% for metric in metrics_header %}<th>{{metric}}</th>{% endfor %}
      </tr>
      {% for mname, mvals in leaderboard.items() %}
      <tr>
        <td>{{mname}}</td>
        {% for metric in metrics_header %}
          <td>{{ '{:.4f}'.format(mvals.get(metric, 0.0)) }}</td>
        {% endfor %}
      </tr>
      {% endfor %}
    </table>
  </div>

  <div class="footer">
    This report was auto-generated by the Agentic AI Business Analyst.
  </div>
</body>
</html>
"""

def render_report(path: str, overview: Dict[str, Any], problem_type: str, best_model_name: str, best_metrics: Dict[str, float], leaderboard: Dict[str, Dict[str, float]]):
    metrics_header = sorted({k for v in leaderboard.values() for k in v.keys()})
    html = Template(TEMPLATE).render(
        now=datetime.now().strftime("%Y-%m-%d %H:%M"),
        overview=overview,
        problem_type=problem_type,
        best_model_name=best_model_name,
        best_metrics=best_metrics,
        leaderboard=leaderboard,
        metrics_header=metrics_header,
    )
    with open(path, "w", encoding="utf-8") as f:
        f.write(html)
    return path
